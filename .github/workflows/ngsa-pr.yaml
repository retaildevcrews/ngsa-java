name: Build NGSA-Java-PR

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

    paths:
      - 'Dockerfile'
      - 'ngsa/src/main/java/**'
      - 'ngsa/src/test/java/**'
      - 'pom.xml'
      - 'ngsa/pom.xml'
      - 'CorrelationVector/pom.xml'
      - '.github/workflows/ngsa-pr.yaml'

jobs:

  build:

    runs-on: ubuntu-20.04
    env:
      DOCKER_REPO: ghcr.io/retaildevcrews/ngsa-java

    steps:
    - uses: actions/checkout@v2

    - name: Login to Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_ID }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Docker Build
      run: |
            docker build . --progress tty -t image

    - name: Set Secrets
      run: |
            mkdir -p /tmp/secrets
            echo -n ${{ secrets.NGSA_PRE_COSMOS_RW_KEY}} >| /tmp/secrets/CosmosKey
            echo -n ${{ secrets.NGSA_PRE_COSMOS_URL }} >| /tmp/secrets/CosmosUrl
            echo -n 'movies' >| /tmp/secrets/CosmosCollection
            echo -n 'imdb' >| /tmp/secrets/CosmosDatabase

    - name: Docker Run and Test
      run: |
            docker run --rm -d --name ngsajava -p 8080:8080 -v /tmp/secrets:/app/secrets:ro image

            echo "Waiting for web server to start ..."
        
            wait_time=10        
            sleep $wait_time

            # wait up to 30 seconds for web server to start
            while true
            do
                if curl localhost:8080/version ; then
                    echo -e "\n web server is running"
                    break
                fi
                if [ $wait_time -gt 30 ] ; then
                  echo -e "\n timeout waiting for web server to start"
                  exit 1
                fi
                
                sleep 1
                ((wait_time=wait_time+1))
            done

            docker run --rm --network=host ghcr.io/retaildevcrews/ngsa-lr:beta -s http://localhost:8080 --max-errors 1 -f benchmark.json baseline.json

    - name: Delete Secrets
      run: |
            rm -rf /tmp/secrets

    - name: Docker Tag and Push
      run: |

         # tag the repo with :dev
         docker tag image $DOCKER_REPO:dev

         # Push to the repo
         docker push -a $DOCKER_REPO
